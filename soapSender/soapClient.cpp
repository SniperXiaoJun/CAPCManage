/* soapClient.cpp
   Generated by gSOAP 2.7.7 from SOF_interface.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.7 2017-09-22 05:17:45 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREVerifySignedData(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREVerifySignedData *WS1__SOF_USCOREVerifySignedData_, WS1__SOF_USCOREVerifySignedDataResponse *WS1__SOF_USCOREVerifySignedDataResponse_)
{	struct __WS1__SOF_USCOREVerifySignedData soap_tmp___WS1__SOF_USCOREVerifySignedData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREVerifySignedData.WS1__SOF_USCOREVerifySignedData_ = WS1__SOF_USCOREVerifySignedData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREVerifySignedData(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREVerifySignedData(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedData, "-WS1:SOF_VerifySignedData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREVerifySignedData(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedData, "-WS1:SOF_VerifySignedData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREVerifySignedDataResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedDataResponse_->soap_get(soap, "WS1:SOF_VerifySignedDataResponse", "WS1:SOF_VerifySignedDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREQueryCertTrustList(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREQueryCertTrustList *WS1__SOF_USCOREQueryCertTrustList_, WS1__SOF_USCOREQueryCertTrustListResponse *WS1__SOF_USCOREQueryCertTrustListResponse_)
{	struct __WS1__SOF_USCOREQueryCertTrustList soap_tmp___WS1__SOF_USCOREQueryCertTrustList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREQueryCertTrustList.WS1__SOF_USCOREQueryCertTrustList_ = WS1__SOF_USCOREQueryCertTrustList_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREQueryCertTrustList(soap, &soap_tmp___WS1__SOF_USCOREQueryCertTrustList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREQueryCertTrustList(soap, &soap_tmp___WS1__SOF_USCOREQueryCertTrustList, "-WS1:SOF_QueryCertTrustList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREQueryCertTrustList(soap, &soap_tmp___WS1__SOF_USCOREQueryCertTrustList, "-WS1:SOF_QueryCertTrustList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREQueryCertTrustListResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREQueryCertTrustListResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREQueryCertTrustListResponse_->soap_get(soap, "WS1:SOF_QueryCertTrustListResponse", "WS1:SOF_QueryCertTrustListResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetP7SignDataInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetP7SignDataInfo *WS1__SOF_USCOREGetP7SignDataInfo_, WS1__SOF_USCOREGetP7SignDataInfoResponse *WS1__SOF_USCOREGetP7SignDataInfoResponse_)
{	struct __WS1__SOF_USCOREGetP7SignDataInfo soap_tmp___WS1__SOF_USCOREGetP7SignDataInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetP7SignDataInfo.WS1__SOF_USCOREGetP7SignDataInfo_ = WS1__SOF_USCOREGetP7SignDataInfo_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetP7SignDataInfo(soap, &soap_tmp___WS1__SOF_USCOREGetP7SignDataInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetP7SignDataInfo(soap, &soap_tmp___WS1__SOF_USCOREGetP7SignDataInfo, "-WS1:SOF_GetP7SignDataInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetP7SignDataInfo(soap, &soap_tmp___WS1__SOF_USCOREGetP7SignDataInfo, "-WS1:SOF_GetP7SignDataInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetP7SignDataInfoResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetP7SignDataInfoResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetP7SignDataInfoResponse_->soap_get(soap, "WS1:SOF_GetP7SignDataInfoResponse", "WS1:SOF_GetP7SignDataInfoResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESetCertTrustList(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESetCertTrustList *WS1__SOF_USCORESetCertTrustList_, WS1__SOF_USCORESetCertTrustListResponse *WS1__SOF_USCORESetCertTrustListResponse_)
{	struct __WS1__SOF_USCORESetCertTrustList soap_tmp___WS1__SOF_USCORESetCertTrustList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESetCertTrustList.WS1__SOF_USCORESetCertTrustList_ = WS1__SOF_USCORESetCertTrustList_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESetCertTrustList(soap, &soap_tmp___WS1__SOF_USCORESetCertTrustList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESetCertTrustList(soap, &soap_tmp___WS1__SOF_USCORESetCertTrustList, "-WS1:SOF_SetCertTrustList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESetCertTrustList(soap, &soap_tmp___WS1__SOF_USCORESetCertTrustList, "-WS1:SOF_SetCertTrustList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESetCertTrustListResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORESetCertTrustListResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESetCertTrustListResponse_->soap_get(soap, "WS1:SOF_SetCertTrustListResponse", "WS1:SOF_SetCertTrustListResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREVerifySignedDataByP7(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREVerifySignedDataByP7 *WS1__SOF_USCOREVerifySignedDataByP7_, WS1__SOF_USCOREVerifySignedDataByP7Response *WS1__SOF_USCOREVerifySignedDataByP7Response_)
{	struct __WS1__SOF_USCOREVerifySignedDataByP7 soap_tmp___WS1__SOF_USCOREVerifySignedDataByP7;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREVerifySignedDataByP7.WS1__SOF_USCOREVerifySignedDataByP7_ = WS1__SOF_USCOREVerifySignedDataByP7_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREVerifySignedDataByP7(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedDataByP7);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREVerifySignedDataByP7(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedDataByP7, "-WS1:SOF_VerifySignedDataByP7", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREVerifySignedDataByP7(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedDataByP7, "-WS1:SOF_VerifySignedDataByP7", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREVerifySignedDataByP7Response_)
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedDataByP7Response_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedDataByP7Response_->soap_get(soap, "WS1:SOF_VerifySignedDataByP7Response", "WS1:SOF_VerifySignedDataByP7Response");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREPubKeyEncrypt(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREPubKeyEncrypt *WS1__SOF_USCOREPubKeyEncrypt_, WS1__SOF_USCOREPubKeyEncryptResponse *WS1__SOF_USCOREPubKeyEncryptResponse_)
{	struct __WS1__SOF_USCOREPubKeyEncrypt soap_tmp___WS1__SOF_USCOREPubKeyEncrypt;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREPubKeyEncrypt.WS1__SOF_USCOREPubKeyEncrypt_ = WS1__SOF_USCOREPubKeyEncrypt_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREPubKeyEncrypt(soap, &soap_tmp___WS1__SOF_USCOREPubKeyEncrypt);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREPubKeyEncrypt(soap, &soap_tmp___WS1__SOF_USCOREPubKeyEncrypt, "-WS1:SOF_PubKeyEncrypt", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREPubKeyEncrypt(soap, &soap_tmp___WS1__SOF_USCOREPubKeyEncrypt, "-WS1:SOF_PubKeyEncrypt", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREPubKeyEncryptResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREPubKeyEncryptResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREPubKeyEncryptResponse_->soap_get(soap, "WS1:SOF_PubKeyEncryptResponse", "WS1:SOF_PubKeyEncryptResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREVerifyTimeStamp(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREVerifyTimeStamp *WS1__SOF_USCOREVerifyTimeStamp_, WS1__SOF_USCOREVerifyTimeStampResponse *WS1__SOF_USCOREVerifyTimeStampResponse_)
{	struct __WS1__SOF_USCOREVerifyTimeStamp soap_tmp___WS1__SOF_USCOREVerifyTimeStamp;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREVerifyTimeStamp.WS1__SOF_USCOREVerifyTimeStamp_ = WS1__SOF_USCOREVerifyTimeStamp_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREVerifyTimeStamp(soap, &soap_tmp___WS1__SOF_USCOREVerifyTimeStamp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREVerifyTimeStamp(soap, &soap_tmp___WS1__SOF_USCOREVerifyTimeStamp, "-WS1:SOF_VerifyTimeStamp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREVerifyTimeStamp(soap, &soap_tmp___WS1__SOF_USCOREVerifyTimeStamp, "-WS1:SOF_VerifyTimeStamp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREVerifyTimeStampResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifyTimeStampResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifyTimeStampResponse_->soap_get(soap, "WS1:SOF_VerifyTimeStampResponse", "WS1:SOF_VerifyTimeStampResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREVerifySignedFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREVerifySignedFile *WS1__SOF_USCOREVerifySignedFile_, WS1__SOF_USCOREVerifySignedFileResponse *WS1__SOF_USCOREVerifySignedFileResponse_)
{	struct __WS1__SOF_USCOREVerifySignedFile soap_tmp___WS1__SOF_USCOREVerifySignedFile;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREVerifySignedFile.WS1__SOF_USCOREVerifySignedFile_ = WS1__SOF_USCOREVerifySignedFile_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREVerifySignedFile(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREVerifySignedFile(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedFile, "-WS1:SOF_VerifySignedFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREVerifySignedFile(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedFile, "-WS1:SOF_VerifySignedFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREVerifySignedFileResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedFileResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedFileResponse_->soap_get(soap, "WS1:SOF_VerifySignedFileResponse", "WS1:SOF_VerifySignedFileResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetCertInfoByOid(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetCertInfoByOid *WS1__SOF_USCOREGetCertInfoByOid_, WS1__SOF_USCOREGetCertInfoByOidResponse *WS1__SOF_USCOREGetCertInfoByOidResponse_)
{	struct __WS1__SOF_USCOREGetCertInfoByOid soap_tmp___WS1__SOF_USCOREGetCertInfoByOid;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetCertInfoByOid.WS1__SOF_USCOREGetCertInfoByOid_ = WS1__SOF_USCOREGetCertInfoByOid_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetCertInfoByOid(soap, &soap_tmp___WS1__SOF_USCOREGetCertInfoByOid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetCertInfoByOid(soap, &soap_tmp___WS1__SOF_USCOREGetCertInfoByOid, "-WS1:SOF_GetCertInfoByOid", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetCertInfoByOid(soap, &soap_tmp___WS1__SOF_USCOREGetCertInfoByOid, "-WS1:SOF_GetCertInfoByOid", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetCertInfoByOidResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetCertInfoByOidResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetCertInfoByOidResponse_->soap_get(soap, "WS1:SOF_GetCertInfoByOidResponse", "WS1:SOF_GetCertInfoByOidResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetServerCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetServerCertificate *WS1__SOF_USCOREGetServerCertificate_, WS1__SOF_USCOREGetServerCertificateResponse *WS1__SOF_USCOREGetServerCertificateResponse_)
{	struct __WS1__SOF_USCOREGetServerCertificate soap_tmp___WS1__SOF_USCOREGetServerCertificate;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetServerCertificate.WS1__SOF_USCOREGetServerCertificate_ = WS1__SOF_USCOREGetServerCertificate_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetServerCertificate(soap, &soap_tmp___WS1__SOF_USCOREGetServerCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetServerCertificate(soap, &soap_tmp___WS1__SOF_USCOREGetServerCertificate, "-WS1:SOF_GetServerCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetServerCertificate(soap, &soap_tmp___WS1__SOF_USCOREGetServerCertificate, "-WS1:SOF_GetServerCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetServerCertificateResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetServerCertificateResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetServerCertificateResponse_->soap_get(soap, "WS1:SOF_GetServerCertificateResponse", "WS1:SOF_GetServerCertificateResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREDelCertTrustList(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREDelCertTrustList *WS1__SOF_USCOREDelCertTrustList_, WS1__SOF_USCOREDelCertTrustListResponse *WS1__SOF_USCOREDelCertTrustListResponse_)
{	struct __WS1__SOF_USCOREDelCertTrustList soap_tmp___WS1__SOF_USCOREDelCertTrustList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREDelCertTrustList.WS1__SOF_USCOREDelCertTrustList_ = WS1__SOF_USCOREDelCertTrustList_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREDelCertTrustList(soap, &soap_tmp___WS1__SOF_USCOREDelCertTrustList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREDelCertTrustList(soap, &soap_tmp___WS1__SOF_USCOREDelCertTrustList, "-WS1:SOF_DelCertTrustList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREDelCertTrustList(soap, &soap_tmp___WS1__SOF_USCOREDelCertTrustList, "-WS1:SOF_DelCertTrustList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREDelCertTrustListResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREDelCertTrustListResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREDelCertTrustListResponse_->soap_get(soap, "WS1:SOF_DelCertTrustListResponse", "WS1:SOF_DelCertTrustListResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetXMLSignatureInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetXMLSignatureInfo *WS1__SOF_USCOREGetXMLSignatureInfo_, WS1__SOF_USCOREGetXMLSignatureInfoResponse *WS1__SOF_USCOREGetXMLSignatureInfoResponse_)
{	struct __WS1__SOF_USCOREGetXMLSignatureInfo soap_tmp___WS1__SOF_USCOREGetXMLSignatureInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetXMLSignatureInfo.WS1__SOF_USCOREGetXMLSignatureInfo_ = WS1__SOF_USCOREGetXMLSignatureInfo_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetXMLSignatureInfo(soap, &soap_tmp___WS1__SOF_USCOREGetXMLSignatureInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetXMLSignatureInfo(soap, &soap_tmp___WS1__SOF_USCOREGetXMLSignatureInfo, "-WS1:SOF_GetXMLSignatureInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetXMLSignatureInfo(soap, &soap_tmp___WS1__SOF_USCOREGetXMLSignatureInfo, "-WS1:SOF_GetXMLSignatureInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetXMLSignatureInfoResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetXMLSignatureInfoResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetXMLSignatureInfoResponse_->soap_get(soap, "WS1:SOF_GetXMLSignatureInfoResponse", "WS1:SOF_GetXMLSignatureInfoResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESignData(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESignData *WS1__SOF_USCORESignData_, WS1__SOF_USCORESignDataResponse *WS1__SOF_USCORESignDataResponse_)
{	struct __WS1__SOF_USCORESignData soap_tmp___WS1__SOF_USCORESignData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESignData.WS1__SOF_USCORESignData_ = WS1__SOF_USCORESignData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESignData(soap, &soap_tmp___WS1__SOF_USCORESignData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESignData(soap, &soap_tmp___WS1__SOF_USCORESignData, "-WS1:SOF_SignData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESignData(soap, &soap_tmp___WS1__SOF_USCORESignData, "-WS1:SOF_SignData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESignDataResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORESignDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESignDataResponse_->soap_get(soap, "WS1:SOF_SignDataResponse", "WS1:SOF_SignDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREVerifySignedDataXML(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREVerifySignedDataXML *WS1__SOF_USCOREVerifySignedDataXML_, WS1__SOF_USCOREVerifySignedDataXMLResponse *WS1__SOF_USCOREVerifySignedDataXMLResponse_)
{	struct __WS1__SOF_USCOREVerifySignedDataXML soap_tmp___WS1__SOF_USCOREVerifySignedDataXML;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREVerifySignedDataXML.WS1__SOF_USCOREVerifySignedDataXML_ = WS1__SOF_USCOREVerifySignedDataXML_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREVerifySignedDataXML(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedDataXML);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREVerifySignedDataXML(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedDataXML, "-WS1:SOF_VerifySignedDataXML", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREVerifySignedDataXML(soap, &soap_tmp___WS1__SOF_USCOREVerifySignedDataXML, "-WS1:SOF_VerifySignedDataXML", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREVerifySignedDataXMLResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedDataXMLResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREVerifySignedDataXMLResponse_->soap_get(soap, "WS1:SOF_VerifySignedDataXMLResponse", "WS1:SOF_VerifySignedDataXMLResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESignFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESignFile *WS1__SOF_USCORESignFile_, WS1__SOF_USCORESignFileResponse *WS1__SOF_USCORESignFileResponse_)
{	struct __WS1__SOF_USCORESignFile soap_tmp___WS1__SOF_USCORESignFile;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESignFile.WS1__SOF_USCORESignFile_ = WS1__SOF_USCORESignFile_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESignFile(soap, &soap_tmp___WS1__SOF_USCORESignFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESignFile(soap, &soap_tmp___WS1__SOF_USCORESignFile, "-WS1:SOF_SignFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESignFile(soap, &soap_tmp___WS1__SOF_USCORESignFile, "-WS1:SOF_SignFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESignFileResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORESignFileResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESignFileResponse_->soap_get(soap, "WS1:SOF_SignFileResponse", "WS1:SOF_SignFileResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetInstance(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetInstance *WS1__SOF_USCOREGetInstance_, WS1__SOF_USCOREGetInstanceResponse *WS1__SOF_USCOREGetInstanceResponse_)
{	struct __WS1__SOF_USCOREGetInstance soap_tmp___WS1__SOF_USCOREGetInstance;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetInstance.WS1__SOF_USCOREGetInstance_ = WS1__SOF_USCOREGetInstance_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetInstance(soap, &soap_tmp___WS1__SOF_USCOREGetInstance);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetInstance(soap, &soap_tmp___WS1__SOF_USCOREGetInstance, "-WS1:SOF_GetInstance", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetInstance(soap, &soap_tmp___WS1__SOF_USCOREGetInstance, "-WS1:SOF_GetInstance", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetInstanceResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetInstanceResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetInstanceResponse_->soap_get(soap, "WS1:SOF_GetInstanceResponse", "WS1:SOF_GetInstanceResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREPriKeyDecrypt(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREPriKeyDecrypt *WS1__SOF_USCOREPriKeyDecrypt_, WS1__SOF_USCOREPriKeyDecryptResponse *WS1__SOF_USCOREPriKeyDecryptResponse_)
{	struct __WS1__SOF_USCOREPriKeyDecrypt soap_tmp___WS1__SOF_USCOREPriKeyDecrypt;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREPriKeyDecrypt.WS1__SOF_USCOREPriKeyDecrypt_ = WS1__SOF_USCOREPriKeyDecrypt_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREPriKeyDecrypt(soap, &soap_tmp___WS1__SOF_USCOREPriKeyDecrypt);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREPriKeyDecrypt(soap, &soap_tmp___WS1__SOF_USCOREPriKeyDecrypt, "-WS1:SOF_PriKeyDecrypt", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREPriKeyDecrypt(soap, &soap_tmp___WS1__SOF_USCOREPriKeyDecrypt, "-WS1:SOF_PriKeyDecrypt", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREPriKeyDecryptResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREPriKeyDecryptResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREPriKeyDecryptResponse_->soap_get(soap, "WS1:SOF_PriKeyDecryptResponse", "WS1:SOF_PriKeyDecryptResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGenRandom(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGenRandom *WS1__SOF_USCOREGenRandom_, WS1__SOF_USCOREGenRandomResponse *WS1__SOF_USCOREGenRandomResponse_)
{	struct __WS1__SOF_USCOREGenRandom soap_tmp___WS1__SOF_USCOREGenRandom;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGenRandom.WS1__SOF_USCOREGenRandom_ = WS1__SOF_USCOREGenRandom_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGenRandom(soap, &soap_tmp___WS1__SOF_USCOREGenRandom);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGenRandom(soap, &soap_tmp___WS1__SOF_USCOREGenRandom, "-WS1:SOF_GenRandom", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGenRandom(soap, &soap_tmp___WS1__SOF_USCOREGenRandom, "-WS1:SOF_GenRandom", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGenRandomResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGenRandomResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGenRandomResponse_->soap_get(soap, "WS1:SOF_GenRandomResponse", "WS1:SOF_GenRandomResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetSignMethod(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetSignMethod *WS1__SOF_USCOREGetSignMethod_, WS1__SOF_USCOREGetSignMethodResponse *WS1__SOF_USCOREGetSignMethodResponse_)
{	struct __WS1__SOF_USCOREGetSignMethod soap_tmp___WS1__SOF_USCOREGetSignMethod;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetSignMethod.WS1__SOF_USCOREGetSignMethod_ = WS1__SOF_USCOREGetSignMethod_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetSignMethod(soap, &soap_tmp___WS1__SOF_USCOREGetSignMethod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetSignMethod(soap, &soap_tmp___WS1__SOF_USCOREGetSignMethod, "-WS1:SOF_GetSignMethod", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetSignMethod(soap, &soap_tmp___WS1__SOF_USCOREGetSignMethod, "-WS1:SOF_GetSignMethod", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetSignMethodResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetSignMethodResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetSignMethodResponse_->soap_get(soap, "WS1:SOF_GetSignMethodResponse", "WS1:SOF_GetSignMethodResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESetWebAppName(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESetWebAppName *WS1__SOF_USCORESetWebAppName_, WS1__SOF_USCORESetWebAppNameResponse *WS1__SOF_USCORESetWebAppNameResponse_)
{	struct __WS1__SOF_USCORESetWebAppName soap_tmp___WS1__SOF_USCORESetWebAppName;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESetWebAppName.WS1__SOF_USCORESetWebAppName_ = WS1__SOF_USCORESetWebAppName_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESetWebAppName(soap, &soap_tmp___WS1__SOF_USCORESetWebAppName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESetWebAppName(soap, &soap_tmp___WS1__SOF_USCORESetWebAppName, "-WS1:SOF_SetWebAppName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESetWebAppName(soap, &soap_tmp___WS1__SOF_USCORESetWebAppName, "-WS1:SOF_SetWebAppName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESetWebAppNameResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORESetWebAppNameResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESetWebAppNameResponse_->soap_get(soap, "WS1:SOF_SetWebAppNameResponse", "WS1:SOF_SetWebAppNameResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESetEncryptMethod(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESetEncryptMethod *WS1__SOF_USCORESetEncryptMethod_, WS1__SOF_USCORESetEncryptMethodResponse *WS1__SOF_USCORESetEncryptMethodResponse_)
{	struct __WS1__SOF_USCORESetEncryptMethod soap_tmp___WS1__SOF_USCORESetEncryptMethod;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESetEncryptMethod.WS1__SOF_USCORESetEncryptMethod_ = WS1__SOF_USCORESetEncryptMethod_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESetEncryptMethod(soap, &soap_tmp___WS1__SOF_USCORESetEncryptMethod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESetEncryptMethod(soap, &soap_tmp___WS1__SOF_USCORESetEncryptMethod, "-WS1:SOF_SetEncryptMethod", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESetEncryptMethod(soap, &soap_tmp___WS1__SOF_USCORESetEncryptMethod, "-WS1:SOF_SetEncryptMethod", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESetEncryptMethodResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORESetEncryptMethodResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESetEncryptMethodResponse_->soap_get(soap, "WS1:SOF_SetEncryptMethodResponse", "WS1:SOF_SetEncryptMethodResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORECreateTimeStampRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORECreateTimeStampRequest *WS1__SOF_USCORECreateTimeStampRequest_, WS1__SOF_USCORECreateTimeStampRequestResponse *WS1__SOF_USCORECreateTimeStampRequestResponse_)
{	struct __WS1__SOF_USCORECreateTimeStampRequest soap_tmp___WS1__SOF_USCORECreateTimeStampRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORECreateTimeStampRequest.WS1__SOF_USCORECreateTimeStampRequest_ = WS1__SOF_USCORECreateTimeStampRequest_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORECreateTimeStampRequest(soap, &soap_tmp___WS1__SOF_USCORECreateTimeStampRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORECreateTimeStampRequest(soap, &soap_tmp___WS1__SOF_USCORECreateTimeStampRequest, "-WS1:SOF_CreateTimeStampRequest", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORECreateTimeStampRequest(soap, &soap_tmp___WS1__SOF_USCORECreateTimeStampRequest, "-WS1:SOF_CreateTimeStampRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORECreateTimeStampRequestResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORECreateTimeStampRequestResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORECreateTimeStampRequestResponse_->soap_get(soap, "WS1:SOF_CreateTimeStampRequestResponse", "WS1:SOF_CreateTimeStampRequestResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetEncryptMethod(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetEncryptMethod *WS1__SOF_USCOREGetEncryptMethod_, WS1__SOF_USCOREGetEncryptMethodResponse *WS1__SOF_USCOREGetEncryptMethodResponse_)
{	struct __WS1__SOF_USCOREGetEncryptMethod soap_tmp___WS1__SOF_USCOREGetEncryptMethod;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetEncryptMethod.WS1__SOF_USCOREGetEncryptMethod_ = WS1__SOF_USCOREGetEncryptMethod_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetEncryptMethod(soap, &soap_tmp___WS1__SOF_USCOREGetEncryptMethod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetEncryptMethod(soap, &soap_tmp___WS1__SOF_USCOREGetEncryptMethod, "-WS1:SOF_GetEncryptMethod", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetEncryptMethod(soap, &soap_tmp___WS1__SOF_USCOREGetEncryptMethod, "-WS1:SOF_GetEncryptMethod", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetEncryptMethodResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetEncryptMethodResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetEncryptMethodResponse_->soap_get(soap, "WS1:SOF_GetEncryptMethodResponse", "WS1:SOF_GetEncryptMethodResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORECreateTimeStampResponse(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORECreateTimeStampResponse *WS1__SOF_USCORECreateTimeStampResponse_, WS1__SOF_USCORECreateTimeStampResponseResponse *WS1__SOF_USCORECreateTimeStampResponseResponse_)
{	struct __WS1__SOF_USCORECreateTimeStampResponse soap_tmp___WS1__SOF_USCORECreateTimeStampResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORECreateTimeStampResponse.WS1__SOF_USCORECreateTimeStampResponse_ = WS1__SOF_USCORECreateTimeStampResponse_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORECreateTimeStampResponse(soap, &soap_tmp___WS1__SOF_USCORECreateTimeStampResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORECreateTimeStampResponse(soap, &soap_tmp___WS1__SOF_USCORECreateTimeStampResponse, "-WS1:SOF_CreateTimeStampResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORECreateTimeStampResponse(soap, &soap_tmp___WS1__SOF_USCORECreateTimeStampResponse, "-WS1:SOF_CreateTimeStampResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORECreateTimeStampResponseResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORECreateTimeStampResponseResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORECreateTimeStampResponseResponse_->soap_get(soap, "WS1:SOF_CreateTimeStampResponseResponse", "WS1:SOF_CreateTimeStampResponseResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREValidateCert(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREValidateCert *WS1__SOF_USCOREValidateCert_, WS1__SOF_USCOREValidateCertResponse *WS1__SOF_USCOREValidateCertResponse_)
{	struct __WS1__SOF_USCOREValidateCert soap_tmp___WS1__SOF_USCOREValidateCert;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREValidateCert.WS1__SOF_USCOREValidateCert_ = WS1__SOF_USCOREValidateCert_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREValidateCert(soap, &soap_tmp___WS1__SOF_USCOREValidateCert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREValidateCert(soap, &soap_tmp___WS1__SOF_USCOREValidateCert, "-WS1:SOF_ValidateCert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREValidateCert(soap, &soap_tmp___WS1__SOF_USCOREValidateCert, "-WS1:SOF_ValidateCert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREValidateCertResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREValidateCertResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREValidateCertResponse_->soap_get(soap, "WS1:SOF_ValidateCertResponse", "WS1:SOF_ValidateCertResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__DeleteFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__DeleteFile *WS1__DeleteFile_, WS1__DeleteFileResponse *WS1__DeleteFileResponse_)
{	struct __WS1__DeleteFile soap_tmp___WS1__DeleteFile;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__DeleteFile.WS1__DeleteFile_ = WS1__DeleteFile_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__DeleteFile(soap, &soap_tmp___WS1__DeleteFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__DeleteFile(soap, &soap_tmp___WS1__DeleteFile, "-WS1:DeleteFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__DeleteFile(soap, &soap_tmp___WS1__DeleteFile, "-WS1:DeleteFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__DeleteFileResponse_)
		return soap_closesock(soap);
	WS1__DeleteFileResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__DeleteFileResponse_->soap_get(soap, "WS1:DeleteFileResponse", "WS1:DeleteFileResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__GetFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__GetFile *WS1__GetFile_, WS1__GetFileResponse *WS1__GetFileResponse_)
{	struct __WS1__GetFile soap_tmp___WS1__GetFile;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__GetFile.WS1__GetFile_ = WS1__GetFile_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__GetFile(soap, &soap_tmp___WS1__GetFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__GetFile(soap, &soap_tmp___WS1__GetFile, "-WS1:GetFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__GetFile(soap, &soap_tmp___WS1__GetFile, "-WS1:GetFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__GetFileResponse_)
		return soap_closesock(soap);
	WS1__GetFileResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__GetFileResponse_->soap_get(soap, "WS1:GetFileResponse", "WS1:GetFileResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREDecryptFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREDecryptFile *WS1__SOF_USCOREDecryptFile_, WS1__SOF_USCOREDecryptFileResponse *WS1__SOF_USCOREDecryptFileResponse_)
{	struct __WS1__SOF_USCOREDecryptFile soap_tmp___WS1__SOF_USCOREDecryptFile;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREDecryptFile.WS1__SOF_USCOREDecryptFile_ = WS1__SOF_USCOREDecryptFile_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREDecryptFile(soap, &soap_tmp___WS1__SOF_USCOREDecryptFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREDecryptFile(soap, &soap_tmp___WS1__SOF_USCOREDecryptFile, "-WS1:SOF_DecryptFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREDecryptFile(soap, &soap_tmp___WS1__SOF_USCOREDecryptFile, "-WS1:SOF_DecryptFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREDecryptFileResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREDecryptFileResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREDecryptFileResponse_->soap_get(soap, "WS1:SOF_DecryptFileResponse", "WS1:SOF_DecryptFileResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESetSignMethod(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESetSignMethod *WS1__SOF_USCORESetSignMethod_, WS1__SOF_USCORESetSignMethodResponse *WS1__SOF_USCORESetSignMethodResponse_)
{	struct __WS1__SOF_USCORESetSignMethod soap_tmp___WS1__SOF_USCORESetSignMethod;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESetSignMethod.WS1__SOF_USCORESetSignMethod_ = WS1__SOF_USCORESetSignMethod_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESetSignMethod(soap, &soap_tmp___WS1__SOF_USCORESetSignMethod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESetSignMethod(soap, &soap_tmp___WS1__SOF_USCORESetSignMethod, "-WS1:SOF_SetSignMethod", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESetSignMethod(soap, &soap_tmp___WS1__SOF_USCORESetSignMethod, "-WS1:SOF_SetSignMethod", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESetSignMethodResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORESetSignMethodResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESetSignMethodResponse_->soap_get(soap, "WS1:SOF_SetSignMethodResponse", "WS1:SOF_SetSignMethodResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetTimeStampInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetTimeStampInfo *WS1__SOF_USCOREGetTimeStampInfo_, WS1__SOF_USCOREGetTimeStampInfoResponse *WS1__SOF_USCOREGetTimeStampInfoResponse_)
{	struct __WS1__SOF_USCOREGetTimeStampInfo soap_tmp___WS1__SOF_USCOREGetTimeStampInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetTimeStampInfo.WS1__SOF_USCOREGetTimeStampInfo_ = WS1__SOF_USCOREGetTimeStampInfo_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetTimeStampInfo(soap, &soap_tmp___WS1__SOF_USCOREGetTimeStampInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetTimeStampInfo(soap, &soap_tmp___WS1__SOF_USCOREGetTimeStampInfo, "-WS1:SOF_GetTimeStampInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetTimeStampInfo(soap, &soap_tmp___WS1__SOF_USCOREGetTimeStampInfo, "-WS1:SOF_GetTimeStampInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetTimeStampInfoResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetTimeStampInfoResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetTimeStampInfoResponse_->soap_get(soap, "WS1:SOF_GetTimeStampInfoResponse", "WS1:SOF_GetTimeStampInfoResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREEncryptFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREEncryptFile *WS1__SOF_USCOREEncryptFile_, WS1__SOF_USCOREEncryptFileResponse *WS1__SOF_USCOREEncryptFileResponse_)
{	struct __WS1__SOF_USCOREEncryptFile soap_tmp___WS1__SOF_USCOREEncryptFile;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREEncryptFile.WS1__SOF_USCOREEncryptFile_ = WS1__SOF_USCOREEncryptFile_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREEncryptFile(soap, &soap_tmp___WS1__SOF_USCOREEncryptFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREEncryptFile(soap, &soap_tmp___WS1__SOF_USCOREEncryptFile, "-WS1:SOF_EncryptFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREEncryptFile(soap, &soap_tmp___WS1__SOF_USCOREEncryptFile, "-WS1:SOF_EncryptFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREEncryptFileResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREEncryptFileResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREEncryptFileResponse_->soap_get(soap, "WS1:SOF_EncryptFileResponse", "WS1:SOF_EncryptFileResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESignDataByP7(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESignDataByP7 *WS1__SOF_USCORESignDataByP7_, WS1__SOF_USCORESignDataByP7Response *WS1__SOF_USCORESignDataByP7Response_)
{	struct __WS1__SOF_USCORESignDataByP7 soap_tmp___WS1__SOF_USCORESignDataByP7;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESignDataByP7.WS1__SOF_USCORESignDataByP7_ = WS1__SOF_USCORESignDataByP7_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESignDataByP7(soap, &soap_tmp___WS1__SOF_USCORESignDataByP7);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESignDataByP7(soap, &soap_tmp___WS1__SOF_USCORESignDataByP7, "-WS1:SOF_SignDataByP7", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESignDataByP7(soap, &soap_tmp___WS1__SOF_USCORESignDataByP7, "-WS1:SOF_SignDataByP7", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESignDataByP7Response_)
		return soap_closesock(soap);
	WS1__SOF_USCORESignDataByP7Response_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESignDataByP7Response_->soap_get(soap, "WS1:SOF_SignDataByP7Response", "WS1:SOF_SignDataByP7Response");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREDecryptData(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREDecryptData *WS1__SOF_USCOREDecryptData_, WS1__SOF_USCOREDecryptDataResponse *WS1__SOF_USCOREDecryptDataResponse_)
{	struct __WS1__SOF_USCOREDecryptData soap_tmp___WS1__SOF_USCOREDecryptData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREDecryptData.WS1__SOF_USCOREDecryptData_ = WS1__SOF_USCOREDecryptData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREDecryptData(soap, &soap_tmp___WS1__SOF_USCOREDecryptData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREDecryptData(soap, &soap_tmp___WS1__SOF_USCOREDecryptData, "-WS1:SOF_DecryptData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREDecryptData(soap, &soap_tmp___WS1__SOF_USCOREDecryptData, "-WS1:SOF_DecryptData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREDecryptDataResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREDecryptDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREDecryptDataResponse_->soap_get(soap, "WS1:SOF_DecryptDataResponse", "WS1:SOF_DecryptDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCORESignDataXML(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCORESignDataXML *WS1__SOF_USCORESignDataXML_, WS1__SOF_USCORESignDataXMLResponse *WS1__SOF_USCORESignDataXMLResponse_)
{	struct __WS1__SOF_USCORESignDataXML soap_tmp___WS1__SOF_USCORESignDataXML;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCORESignDataXML.WS1__SOF_USCORESignDataXML_ = WS1__SOF_USCORESignDataXML_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCORESignDataXML(soap, &soap_tmp___WS1__SOF_USCORESignDataXML);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCORESignDataXML(soap, &soap_tmp___WS1__SOF_USCORESignDataXML, "-WS1:SOF_SignDataXML", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCORESignDataXML(soap, &soap_tmp___WS1__SOF_USCORESignDataXML, "-WS1:SOF_SignDataXML", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCORESignDataXMLResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCORESignDataXMLResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCORESignDataXMLResponse_->soap_get(soap, "WS1:SOF_SignDataXMLResponse", "WS1:SOF_SignDataXMLResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREGetCertInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREGetCertInfo *WS1__SOF_USCOREGetCertInfo_, WS1__SOF_USCOREGetCertInfoResponse *WS1__SOF_USCOREGetCertInfoResponse_)
{	struct __WS1__SOF_USCOREGetCertInfo soap_tmp___WS1__SOF_USCOREGetCertInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREGetCertInfo.WS1__SOF_USCOREGetCertInfo_ = WS1__SOF_USCOREGetCertInfo_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREGetCertInfo(soap, &soap_tmp___WS1__SOF_USCOREGetCertInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREGetCertInfo(soap, &soap_tmp___WS1__SOF_USCOREGetCertInfo, "-WS1:SOF_GetCertInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREGetCertInfo(soap, &soap_tmp___WS1__SOF_USCOREGetCertInfo, "-WS1:SOF_GetCertInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREGetCertInfoResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREGetCertInfoResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREGetCertInfoResponse_->soap_get(soap, "WS1:SOF_GetCertInfoResponse", "WS1:SOF_GetCertInfoResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREQueryCertTrustListAltNames(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREQueryCertTrustListAltNames *WS1__SOF_USCOREQueryCertTrustListAltNames_, WS1__SOF_USCOREQueryCertTrustListAltNamesResponse *WS1__SOF_USCOREQueryCertTrustListAltNamesResponse_)
{	struct __WS1__SOF_USCOREQueryCertTrustListAltNames soap_tmp___WS1__SOF_USCOREQueryCertTrustListAltNames;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREQueryCertTrustListAltNames.WS1__SOF_USCOREQueryCertTrustListAltNames_ = WS1__SOF_USCOREQueryCertTrustListAltNames_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREQueryCertTrustListAltNames(soap, &soap_tmp___WS1__SOF_USCOREQueryCertTrustListAltNames);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREQueryCertTrustListAltNames(soap, &soap_tmp___WS1__SOF_USCOREQueryCertTrustListAltNames, "-WS1:SOF_QueryCertTrustListAltNames", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREQueryCertTrustListAltNames(soap, &soap_tmp___WS1__SOF_USCOREQueryCertTrustListAltNames, "-WS1:SOF_QueryCertTrustListAltNames", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREQueryCertTrustListAltNamesResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREQueryCertTrustListAltNamesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREQueryCertTrustListAltNamesResponse_->soap_get(soap, "WS1:SOF_QueryCertTrustListAltNamesResponse", "WS1:SOF_QueryCertTrustListAltNamesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___WS1__SOF_USCOREEncryptData(struct soap *soap, const char *soap_endpoint, const char *soap_action, WS1__SOF_USCOREEncryptData *WS1__SOF_USCOREEncryptData_, WS1__SOF_USCOREEncryptDataResponse *WS1__SOF_USCOREEncryptDataResponse_)
{	struct __WS1__SOF_USCOREEncryptData soap_tmp___WS1__SOF_USCOREEncryptData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/camanager/webservice/sOF_GenRandom";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___WS1__SOF_USCOREEncryptData.WS1__SOF_USCOREEncryptData_ = WS1__SOF_USCOREEncryptData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___WS1__SOF_USCOREEncryptData(soap, &soap_tmp___WS1__SOF_USCOREEncryptData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__SOF_USCOREEncryptData(soap, &soap_tmp___WS1__SOF_USCOREEncryptData, "-WS1:SOF_EncryptData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__SOF_USCOREEncryptData(soap, &soap_tmp___WS1__SOF_USCOREEncryptData, "-WS1:SOF_EncryptData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!WS1__SOF_USCOREEncryptDataResponse_)
		return soap_closesock(soap);
	WS1__SOF_USCOREEncryptDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__SOF_USCOREEncryptDataResponse_->soap_get(soap, "WS1:SOF_EncryptDataResponse", "WS1:SOF_EncryptDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
